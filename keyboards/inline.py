from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import Message
from data.database import DataBase

db = DataBase('mainbase.db')


class MyCallBack(CallbackData, prefix='my_callback'):
    zap: str


class MyLocation(CallbackData, prefix='my_location'):
    loc: str


class ToBuy(CallbackData, prefix='to_buy'):
    buy: str


class ToAdmin(CallbackData, prefix='to_adm'):
    adm: str


class ToProf(CallbackData, prefix='to_prof'):
    prof: str


def menu_start():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text='üñ• –¢–≤–æ–π –ü—Ä–æ—Ñ–∏–ª—å', callback_data=MyCallBack(zap='profile'))
    keyboard.button(text='ü§ô–ö—É–ø–∏—Ç—å –∫—É—Ä–∏—Ç—åü§ô', callback_data=MyCallBack(zap='buy'))
    keyboard.button(text='‚ÄºÔ∏è–ê–∫—Ü–∏—è "–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞"‚ÄºÔ∏è', callback_data=MyCallBack(zap='refs'))
    keyboard.button(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìå', callback_data=MyCallBack(zap='inform'))
    keyboard.button(text='–°–≤—è–∑—å üì≤', callback_data=MyCallBack(zap='call_back'))
    keyboard.adjust(2, 1, 2)
    return keyboard.as_markup()


def sale_menu():
    gr = db.count_products('–ì—Ä–∞–º–º')
    pgr = db.count_products('–ü–æ–ª–∫–∞(0,5 –≥—Ä–∞–º–º–∞)')
    kr = db.count_products('–ö–æ—Ä–∞–±–ª—å')
    pkr = db.count_products('–ü–æ–ª–∫–∞(0,5 –∫–æ—Ä–∞–±–ª—è)')
    decl = db.count_products('–ü—è—Ç–∫–∞')
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'ü•¥–ö—É–ø–∏—Ç—å –≥—Ä–∞–º–º *({gr}—à—Ç)*', callback_data=MyCallBack(zap='gramm'))
    keyboard.button(text=f'–ü–æ–ª–∫–∞(0.5–≥—Ä)  *({pgr}—à—Ç)*', callback_data=MyCallBack(zap='polka'))
    keyboard.button(text=f'üö¢–ö—É–ø–∏—Ç—å –∫–æ—Ä–∞–±–ª—å  *({kr}—à—Ç)*', callback_data=MyCallBack(zap='full'))
    keyboard.button(text=f'–ü–æ–ª–∫–∞(0.5–∫–æ—Ä–∞–±–ª—è)  *({pkr}—à—Ç)*', callback_data=MyCallBack(zap='path_full'))
    keyboard.adjust(2,2,2)
    return keyboard.as_markup()


def location(user_id):
    data = db.list_pay(user_id)
    product = data[2]
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'–¶–µ–Ω—Ç—Ä - {db.count_prod_loc(product,"–¶–µ–Ω—Ç—Ä")} —à—Ç', callback_data=MyLocation(loc='city'))
    keyboard.button(text=f'–ë–ª–æ—á–æ–∫ - {db.count_prod_loc(product,"–ë–ª–æ—á–æ–∫")} —à—Ç', callback_data=MyLocation(loc='block'))
    keyboard.button(text=f'–§–∏–ª—å—Ç—Ä—ã - {db.count_prod_loc(product, "–§–∏–ª—å—Ç—Ä–æ–≤–∞–ª—å–Ω–∞—è")} —à—Ç', callback_data=MyLocation(loc='filtry'))
    keyboard.button(text=f'–í–∞—Ç—É—Ç–∏–Ω–æ - {db.count_prod_loc(product,"–í–∞—Ç—É—Ç–∏–Ω–æ")} —à—Ç', callback_data=MyLocation(loc='vatut'))
    keyboard.adjust(2,2,2)
    return keyboard.as_markup()


def list_pay():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text='–ö—É–ø–∏—Ç—å', callback_data=ToBuy(buy='ok_pay'))
    keyboard.button(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=ToBuy(buy='cancel_pay'))
    keyboard.adjust(2,2,2)
    return keyboard.as_markup()


def admin_start():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text='–î–æ–±–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é', callback_data=ToAdmin(adm='add_loc'))
    keyboard.button(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ id', callback_data=ToAdmin(adm='look_id'))
    keyboard.button(text='–í—ã–¥–∞—Ç—å –±–æ–Ω—É—Å –ø–æ id', callback_data=ToAdmin(adm='get_bonus'))
    keyboard.button(text='–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏', callback_data=ToAdmin(adm='all_users'))
    keyboard.button(text='–ü—Ä–æ–¥–∞–∂–∏', callback_data=ToAdmin(adm='stat_sales'))
    keyboard.adjust(2, 2, 2)
    return keyboard.as_markup()


def menu_profile():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text='–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å', callback_data=ToProf(prof='take_bonus'))
    return keyboard.as_markup()